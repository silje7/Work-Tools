#!/bin/bash

# Benutzerdefinierte Angaben
GITHUB_USER="DEIN_GITHUB_USERNAME"
TOKEN="DEIN_GITHUB_TOKEN"
REPO_NAME="tracking-certificates-downloader"
DESCRIPTION="Automatisiertes Tool zum Herunterladen von Zertifikaten mit Tracking-Aktivitäten"

# Projektverzeichnis lokal
mkdir -p "$REPO_NAME"
cd "$REPO_NAME" || exit 1

# Projektdateien anlegen
cat > scraper.py <<EOF
import os
import requests

SAVE_PATH = os.path.expanduser("~/Documents/TrackingCertificates")
KEYWORDS = ["tracking", "analytics", "cookies", "behavior", "user data", "profiling"]

URLS = [
    "https://example.com/certificates/cert1.pdf",
    "https://example.org/privacy/cert2.pdf"
]

def download_certificates():
    if not os.path.exists(SAVE_PATH):
        os.makedirs(SAVE_PATH)

    for url in URLS:
        try:
            r = requests.get(url)
            r.raise_for_status()
            if "application/pdf" in r.headers.get("Content-Type", ""):
                filepath = os.path.join(SAVE_PATH, os.path.basename(url))
                with open(filepath, "wb") as f:
                    f.write(r.content)
                print(f"[OK] Zertifikat gespeichert: {filepath}")
            else:
                print(f"[INFO] URL enthält keine PDF: {url}")
        except Exception as e:
            print(f"[FEHLER] {url}: {e}")

if __name__ == "__main__":
    download_certificates()
EOF

cat > requirements.txt <<EOF
requests
EOF

cat > README.md <<EOF
# Tracking Certificates Downloader

Automatisiertes Herunterladen von PDF‑Zertifikaten mit Tracking‑Bezug.

## Voraussetzungen
- Python 3.x
- \`requests\` (siehe \`requirements.txt\`)

## Installation & Nutzung

\`\`\`bash
git clone https://github.com/$GITHUB_USER/$REPO_NAME.git
cd $REPO_NAME
pip install -r requirements.txt
python scraper.py
\`\`\`

Die Zertifikate werden unter \`~/Documents/TrackingCertificates\` gespeichert. Die URL‑Liste in \`scraper.py\` kann manuell ergänzt oder automatisiert erweitert werden.
EOF

# Repository erstellen über GitHub API
curl -u "$GITHUB_USER:$TOKEN" https://api.github.com/user/repos -d "{\"name\":\"$REPO_NAME\", \"description\":\"$DESCRIPTION\", \"private\":false}"

# Git-Repo initialisieren
git init
git branch -M main
git remote add origin "https://$GITHUB_USER:$TOKEN@github.com/$GITHUB_USER/$REPO_NAME.git"
git add .
git commit -m "Initial commit: downloader for tracking-related certificates"
git push -u origin main